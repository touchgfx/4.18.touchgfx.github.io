(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[4240],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return p}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=m(n),p=a,d=g["".concat(s,".").concat(p)]||g[p]||c[p]||i;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},22425:function(e,t,n){"use strict";var r=n(67294);class a extends r.Component{render(){return r.createElement("div",{class:"code-header"},r.createElement("div",null,r.createElement("h5",null,this.props.children)))}}t.Z=a},44035:function(e,t,n){"use strict";var r=n(67294),a=n(25026);t.Z=function(e){const t=e.noShadow||!1,n=e.width,i=e.height,o=(0,a.Z)(e.imageSource);return t?r.createElement("div",{class:"figure noshadow"},r.createElement("a",{href:o,target:"_blank"},r.createElement("img",{width:n,height:i,src:o})),r.createElement("p",null,e.children)):r.createElement("div",{class:"figure"},r.createElement("a",{href:o,target:"_blank"},r.createElement("img",{width:n,height:i,src:o})),r.createElement("p",null,e.children))}},29415:function(e,t,n){"use strict";var r=n(67294),a=n(88678);const i=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},r.createElement("path",{"fill-rule":"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}));class o extends r.Component{render(){return r.createElement(a.Z,{color:"var(--highlight-color-further-reading)",header:"Further reading",type:"further-reading",icon:i},this.props.children)}}t.Z=o},88678:function(e,t,n){"use strict";var r=n(67294);class a extends r.Component{render(){const e=`highlight highlight-${this.props.type}`;return r.createElement("div",{class:e},r.createElement("div",{class:"highlight-heading"},r.createElement("h5",null,r.createElement("div",{class:"highlight-icon"},this.props.icon),this.props.header)),r.createElement("div",{class:"highlight-content"},this.props.children))}}t.Z=a},31217:function(e,t,n){"use strict";n.d(t,{Z:function(){return b}});var r=n(67294),a=n(73727),i=n(11368),o=n(35096),l=n(84487);const s=(0,r.createContext)({collectLink:()=>{}});var m=n(25026),u=n(67023),c=Object.defineProperty,g=Object.defineProperties,p=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,h=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable,k=(e,t,n)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,v=(e,t)=>{for(var n in t||(t={}))h.call(t,n)&&k(e,n,t[n]);if(d)for(var n of d(t))f.call(t,n)&&k(e,n,t[n]);return e};var b=function(e){var t,n=e,{isNavLink:c,to:k,href:b,activeClassName:y,isActive:N,"data-noBrokenLinkCheck":w,autoAddBaseUrl:x=!0}=n,T=((e,t)=>{var n={};for(var r in e)h.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&d)for(var r of d(e))t.indexOf(r)<0&&f.call(e,r)&&(n[r]=e[r]);return n})(n,["isNavLink","to","href","activeClassName","isActive","data-noBrokenLinkCheck","autoAddBaseUrl"]);const{siteConfig:{trailingSlash:O,baseUrl:_}}=(0,i.Z)(),{withBaseUrl:L}=(0,m.C)(),E=(0,r.useContext)(s),I=k||b,R=(0,o.Z)(I),G=null==I?void 0:I.replace("pathname://","");let B=void 0!==G?(C=G,x&&(e=>e.startsWith("/"))(C)?L(C):C):void 0;var C;B&&R&&(B=(0,u.applyTrailingSlash)(B,{trailingSlash:O,baseUrl:_}));const P=(0,r.useRef)(!1),j=c?a.OL:a.rU,S=l.Z.canUseIntersectionObserver,F=(0,r.useRef)();(0,r.useEffect)((()=>(!S&&R&&null!=B&&window.docusaurus.prefetch(B),()=>{S&&F.current&&F.current.disconnect()})),[F,B,S,R]);const A=null!==(t=null==B?void 0:B.startsWith("#"))&&void 0!==t&&t,M=!B||!R||A;return B&&R&&!A&&!w&&E.collectLink(B),M?r.createElement("a",v(v({href:B},I&&!R&&{target:"_blank",rel:"noopener noreferrer"}),T)):r.createElement(j,v((Z=v({},T),g(Z,p({onMouseEnter:()=>{P.current||null==B||(window.docusaurus.preload(B),P.current=!0)},innerRef:e=>{var t,n;S&&e&&R&&(t=e,n=()=>{null!=B&&window.docusaurus.prefetch(B)},F.current=new window.IntersectionObserver((e=>{e.forEach((e=>{t===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(F.current.unobserve(t),F.current.disconnect(),n())}))})),F.current.observe(t))},to:B||""}))),c&&{isActive:N,activeClassName:y}));var Z}},35096:function(e,t,n){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{b:function(){return r},Z:function(){return a}})},25026:function(e,t,n){"use strict";n.d(t,{C:function(){return i},Z:function(){return o}});var r=n(11368),a=n(35096);function i(){const{siteConfig:{baseUrl:e="/",url:t}={}}=(0,r.Z)();return{withBaseUrl:(n,r)=>function(e,t,n,{forcePrependBaseUrl:r=!1,absolute:i=!1}={}){if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(r)return t+n;const o=n.startsWith(t)?n:t+n.replace(/^\//,"");return i?e+o:o}(t,e,n,r)}}function o(e,t={}){const{withBaseUrl:n}=i();return n(e,t)}},67271:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){const{trailingSlash:n,baseUrl:r}=t;if(e.startsWith("#"))return e;if(void 0===n)return e;const[a]=e.split(/[#?]/),i="/"===a||a===r?a:(o=a,n?function(e){return e.endsWith("/")?e:`${e}/`}(o):function(e){return e.endsWith("/")?e.slice(0,-1):e}(o));var o;return e.replace(a,i)}},67023:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.uniq=t.applyTrailingSlash=void 0;var a=n(67271);Object.defineProperty(t,"applyTrailingSlash",{enumerable:!0,get:function(){return r(a).default}});var i=n(11080);Object.defineProperty(t,"uniq",{enumerable:!0,get:function(){return r(i).default}})},11080:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return Array.from(new Set(e))}},56766:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return f},contentTitle:function(){return k},metadata:function(){return v},toc:function(){return b},default:function(){return N}});var r=n(3905),a=n(44035),i=n(22425),o=n(29415),l=n(31217),s=Object.defineProperty,m=Object.defineProperties,u=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,g=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,h=(e,t)=>{for(var n in t||(t={}))g.call(t,n)&&d(e,n,t[n]);if(c)for(var n of c(t))p.call(t,n)&&d(e,n,t[n]);return e};const f={id:"using-the-l8-image-format-to-reduce-memory-consumption",title:"Using the L8 Image Format to Reduce Memory Consumption"},k=void 0,v={unversionedId:"development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption",id:"development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption",isDocsHomePage:!1,title:"Using the L8 Image Format to Reduce Memory Consumption",description:"Images in the L8 format take up less flash storage and are faster to draw than e.g. ARGB8888.",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption.mdx",sourceDirName:"development/ui-development/scenarios",slug:"/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption",permalink:"/4.18/zh-CN/docs/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption",tags:[],version:"current",frontMatter:{id:"using-the-l8-image-format-to-reduce-memory-consumption",title:"Using the L8 Image Format to Reduce Memory Consumption"},sidebar:"docs",previous:{title:"Loading Images at Runtime",permalink:"/4.18/zh-CN/docs/development/ui-development/scenarios/loading-images-at-runtime"},next:{title:"Creating Dynamic L8 Images",permalink:"/4.18/zh-CN/docs/development/ui-development/scenarios/creating-dynamic-l8-images"}},b=[{value:"Example L8 Image",id:"example-l8-image",children:[],level:2},{value:"Using  L8 Images in TouchGFX Designer",id:"using--l8-images-in-touchgfx-designer",children:[],level:2},{value:"Transparent Images",id:"transparent-images",children:[],level:2},{value:"Converting an image to 256 colors",id:"converting-an-image-to-256-colors",children:[{value:"Paint.NET",id:"paintnet",children:[],level:3},{value:"ImageMagick",id:"imagemagick",children:[],level:3},{value:"Comparison",id:"comparison",children:[],level:3}],level:2},{value:"Manual Configuration",id:"manual-configuration",children:[],level:2}],y={toc:b};function N(e){var t,n=e,{components:s}=n,d=((e,t)=>{var n={};for(var r in e)g.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&c)for(var r of c(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=h(h({},y),d),m(t,u({components:s,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"Images in the L8 format take up less flash storage and are faster to draw than e.g. ARGB8888."),(0,r.kt)("p",null,"An image in L8 format consists of a color palette and a pixel array: The color palette lists up to 256 different colors specified in either 16-bit format RGB565, 24-bit format RGB888, or 32-bit format ARGB8888. The pixel array consists of one byte for each pixel. This byte is an index into the color palette (list of colors), pointing out the color for the pixel. The TouchGFX framework draws an L8 image by reading the pixels one-by-one, looking up the colors in the palette and writing these to the framebuffer. This happens automatically and is accelerated by the STM32 Chrom-ART hardware accelerator, if available on the hardware."),(0,r.kt)("p",null,"8-bit per pixel means that one L8 image can use 256 different colors. Another L8 image can use 256 other colors, since the two images each have their own palette."),(0,r.kt)(a.Z,{imageSource:"/img/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption/l8-image-with-4x4-pixels-and-palette-with-4-colors.png",mdxType:"Figure"},"An L8 image with 4 x 4 pixels and a palette with 4 colors"),(0,r.kt)("p",null,"Pixels are one byte (8-bit) each. The size of the pixels is therefore width x height bytes. The palette colors can be 16-bit, 24-bit, or 32 bit colors. Each color definition will therefore take up 2, 3, or 4 bytes."),(0,r.kt)("p",null,"Solid images should be stored in L8_RGB565 if the framebuffer is 16-bit (RGB565 format). If the framebuffer is 24-bit (RGB888) the L8 images must be stored in L8_RGB888 format. If the image is transparent the 32-bit format (ARGB8888) must be used:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Format")),(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Framebuffer format")),(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Supports transparent pixels")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),"L8_RGB565"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"16-bit RGB565"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),"L8_RGB888"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"24-bit RGB888"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),"L8_ARGB8888"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"Both"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"Yes")))),(0,r.kt)(o.Z,{mdxType:"FurtherReading"},(0,r.kt)("li",null,"Read more about palette image formats here: ",(0,r.kt)(l.Z,{to:"https://en.wikipedia.org/wiki/Indexed_color",mdxType:"Link"},"https://en.wikipedia.org/wiki/Indexed_color"))),(0,r.kt)("h2",h({},{id:"example-l8-image"}),"Example L8 Image"),(0,r.kt)("p",null,"Here is a typical logo image. This image only uses 16 different colors:"),(0,r.kt)(a.Z,{imageSource:"/img/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption/touchgfx-logo-with-16-24bit-colors.png",mdxType:"Figure"},"200 x 200 pixels L8 image with 16 different 24-bit colors."),(0,r.kt)("p",null,"The size in flash of this image is significant lower than the original image in the standard 24-bit format (RGB888). The table below lists the flash usage for this concrete image for the three different palette formats and for the non L8 format"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Format")),(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Size of pixels (bytes)")),(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Size of palette (bytes)")),(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Total size (bytes)")),(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Reduction in %")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),"RGB888"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"120,000"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"0"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"120,000"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),"L8_RGB565"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"40,000"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"32"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"40,032"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"66.6%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),"L8_RGB888"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"40,000"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"48"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"40,048"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"66.6%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),"L8_ARGB8888"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"40,000"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"64"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"40,064"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"66.6%")))),(0,r.kt)("p",null,"We see that the size reduction is very large, and that the size of the palette is insignificant on a medium sized image."),(0,r.kt)("h2",h({},{id:"using--l8-images-in-touchgfx-designer"}),"Using  L8 Images in TouchGFX Designer"),(0,r.kt)("p",null,"It is very easy to use the L8 image format in TouchGFX. The only thing to do is to configure the image converter to convert the image from PNG to L8 format. Here we will go through the whole process:"),(0,r.kt)("p",null,"Start a new project in the TouchGFX Designer. Copy your image to the assets/images folder in the new project:"),(0,r.kt)(a.Z,{imageSource:"/img/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption/touchgfx-logo-in-assets-images-folder.png",mdxType:"Figure"},"Images folder of TouchGFX project"),(0,r.kt)("p",null,"Now go to the TouchGFX Designer and click the ",(0,r.kt)("a",h({parentName:"p"},{href:"../designer-user-guide/images-view"}),"Images tab")," in the top bar and select the image:"),(0,r.kt)(a.Z,{imageSource:"/img/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption/touchgfx-logo-in-touchgfx-designer-images-4.17.png",mdxType:"Figure"},"Logo in Images view of TouchGFX Designer"),(0,r.kt)("p",null,"On the right side on the window, select image format L8_RGB888 (this example is running 24 bit colors)."),(0,r.kt)("p",null,"An image Widget can now be inserted on the canvas (here we inserted a Box in the background):"),(0,r.kt)(a.Z,{imageSource:"/img/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption/touchgfx-logo-in-touchgfx-designer-canvas-4.17.png",mdxType:"Figure"},"Image widget on Canvas in TouchGFX Designer"),(0,r.kt)("p",null,"Nothing needs to be changed in the UI code. The Image Converter converts the PNG file and generates an image in L8 format because of the configuration we did in the Images tab."),(0,r.kt)("h2",h({},{id:"transparent-images"}),"Transparent Images"),(0,r.kt)("p",null,"As mentioned above it is also possible to use L8 format for images with transparency."),(0,r.kt)(a.Z,{imageSource:"/img/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption/button-image-32bit-non-opaque-argb8888.png",mdxType:"Figure"},"170 x 60 pixels button image in 32 bit format ARGB8888"),(0,r.kt)("p",null,"The above image uses 108 colors (many shades of blue). This image can use the format L8_ARGB8888. The size will be significantly lower:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Format")),(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Size of pixels (bytes)")),(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Size of palette (bytes)")),(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Total size (bytes)")),(0,r.kt)("th",h({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"th"},"Reduction in %")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),"ARGB888"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"40,800"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"0"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"40,800"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",h({parentName:"tr"},{align:null}),"L8_ARGB8888"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"10,200"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"432"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"10,632"),(0,r.kt)("td",h({parentName:"tr"},{align:null}),"73.9%")))),(0,r.kt)("h2",h({},{id:"converting-an-image-to-256-colors"}),"Converting an image to 256 colors"),(0,r.kt)("p",null,"Many images use more than 256 colors. This is common for images that are photo-realistic or images with gradients. These images cannot directly be converted to L8 image format in the TouchGFX Designer, because they contain to many colors."),(0,r.kt)("p",null,"In many cases though, it is possible to reduce the number of colors used in a specific image. Ideally, a graphics artist will convert/supply the images in 256 colors, however image manipulation tools can also perform the conversion without loosing too much of the image quality."),(0,r.kt)("h3",h({},{id:"paintnet"}),"Paint.NET"),(0,r.kt)("p",null,"The simplest way is to use Paint.NET. Open the original image and use Save As to save the image in another file. In the Save Configuration dialog, select 8-bit, as pixel depth:"),(0,r.kt)(a.Z,{imageSource:"/img/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption/paint-dot-net-convert-to-8bit.png",mdxType:"Figure"},"Paint.NET saving image in 8 bit format"),(0,r.kt)("p",null,"Now use the new PNG in your project. Remember to select the L8_ARGB8888 format in the ",(0,r.kt)("a",h({parentName:"p"},{href:"../designer-user-guide/images-view"}),"Images tab"),' in the TouchGFX Designer. Shadows are not handled very well, but icons with transparent edges looks good in many cases. It is possible to adjust the "Transparency threshold" value and in some cases improve the result.'),(0,r.kt)("h3",h({},{id:"imagemagick"}),"ImageMagick"),(0,r.kt)("p",null,"Another suitable tool, that sometimes results in better L8 images, is ImageMagick (download from ",(0,r.kt)("a",h({parentName:"p"},{href:"https://imagemagick.org/"}),"www.imagemagick.org"),"). This tool can convert images from the command line. This makes it suitable for use in scripts. To convert the clock_bg.png to an image using at most 256 colors, use the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",h({parentName:"pre"},{}),"magick convert clock_bg.png -colors 256 clock_bg_l8_256.png\n")),(0,r.kt)("p",null,"ImageMagick can also tell you how many colors are used in an image. Use this command:"),(0,r.kt)("pre",null,(0,r.kt)("code",h({parentName:"pre"},{className:"language-cmd"}),"magick identify -format %k Blue_Buttons_Round_Edge_small.png\n")),(0,r.kt)("h3",h({},{id:"comparison"}),"Comparison"),(0,r.kt)("p",null,"The three images (original, L8 using Paint.NET, L8 using ImageMagick) are seen below for comparison:"),(0,r.kt)(a.Z,{imageSource:"/img/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption/clock-image-original-paint-dot-net-image-magick-comparison.png",mdxType:"Figure"},"Clock image comparison, left to right: original, Paint.NET, ImageMagick"),(0,r.kt)("p",null,"The middle clock lost the details in the border shadow. In both cases the central part of the clock background looks useable."),(0,r.kt)("h2",h({},{id:"manual-configuration"}),"Manual Configuration"),(0,r.kt)("p",null,"It is also possible to select image formats without using the TouchGFX Designer. The image formats are specified in file application.config located in the project root:"),(0,r.kt)(i.Z,{mdxType:"CodeHeader"},"application.config"),(0,r.kt)("pre",null,(0,r.kt)("code",h({parentName:"pre"},{className:"language-JSON"}),'{\n  "image_configuration": {\n    images": {\n      "Blue_Buttons_Round_Edge_small.png": {\n        "format": "L8_ARGB8888"\n      }\n    },\n    "dither_algorithm": "2",\n    "alpha_dither": "yes",\n    "layout_rotation": "0",\n    "opaque_image_format": "RGB888",\n    "nonopaque_image_format": "ARGB8888",\n    "section": "ExtFlashSection",\n    "extra_section": "ExtFlashSection"\n  }\n}\n')),(0,r.kt)("p",null,'The "images" section under "image_configuration" specifies the format for individual images. If an image is not mentioned here, the image will be generated in the default format (opaque_image_format or nonopaque_image_format).'),(0,r.kt)("p",null,"We recommend using the TouchGFX Designer for image configuration when possible."))}N.isMDXComponent=!0}}]);