"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[4879],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=d(n),h=a,m=s["".concat(c,".").concat(h)]||s[h]||p[h]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},70814:function(e,t,n){var r=n(67294),a=n(88678);const o=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},r.createElement("path",{"fill-rule":"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}));class i extends r.Component{render(){return r.createElement(a.Z,{color:"var(--highlight-color-caution)",header:"Caution",type:"caution",icon:o},this.props.children)}}t.Z=i},22425:function(e,t,n){var r=n(67294);class a extends r.Component{render(){return r.createElement("div",{class:"code-header"},r.createElement("div",null,r.createElement("h5",null,this.props.children)))}}t.Z=a},44035:function(e,t,n){var r=n(67294),a=n(25026);t.Z=function(e){const t=e.noShadow||!1,n=e.width,o=e.height,i=(0,a.Z)(e.imageSource);return t?r.createElement("div",{class:"figure noshadow"},r.createElement("a",{href:i,target:"_blank"},r.createElement("img",{width:n,height:o,src:i})),r.createElement("p",null,e.children)):r.createElement("div",{class:"figure"},r.createElement("a",{href:i,target:"_blank"},r.createElement("img",{width:n,height:o,src:i})),r.createElement("p",null,e.children))}},29415:function(e,t,n){var r=n(67294),a=n(88678);const o=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},r.createElement("path",{"fill-rule":"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}));class i extends r.Component{render(){return r.createElement(a.Z,{color:"var(--highlight-color-further-reading)",header:"Further reading",type:"further-reading",icon:o},this.props.children)}}t.Z=i},88678:function(e,t,n){var r=n(67294);class a extends r.Component{render(){const e=`highlight highlight-${this.props.type}`;return r.createElement("div",{class:e},r.createElement("div",{class:"highlight-heading"},r.createElement("h5",null,r.createElement("div",{class:"highlight-icon"},this.props.icon),this.props.header)),r.createElement("div",{class:"highlight-content"},this.props.children))}}t.Z=a},93054:function(e,t,n){var r=n(67294),a=n(88678);const o=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},r.createElement("path",{"fill-rule":"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}));class i extends r.Component{render(){return r.createElement(a.Z,{color:"var(--highlight-color-note)",header:"Note",type:"note",icon:o},this.props.children)}}t.Z=i},39130:function(e,t,n){n.d(t,{Z:function(){return v}});var r=n(67294),a=n(73727),o=n(11368),i=n(35096),l=n(84487);const c=(0,r.createContext)({collectLink:()=>{}});var d=n(25026),u=n(67023),p=Object.defineProperty,s=Object.defineProperties,h=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,g=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable,k=(e,t,n)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,T=(e,t)=>{for(var n in t||(t={}))g.call(t,n)&&k(e,n,t[n]);if(m)for(var n of m(t))f.call(t,n)&&k(e,n,t[n]);return e};var v=function(e){var t,n=e,{isNavLink:p,to:k,href:v,activeClassName:b,isActive:G,"data-noBrokenLinkCheck":C,autoAddBaseUrl:N=!0}=n,S=((e,t)=>{var n={};for(var r in e)g.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&m)for(var r of m(e))t.indexOf(r)<0&&f.call(e,r)&&(n[r]=e[r]);return n})(n,["isNavLink","to","href","activeClassName","isActive","data-noBrokenLinkCheck","autoAddBaseUrl"]);const{siteConfig:{trailingSlash:X,baseUrl:y}}=(0,o.Z)(),{withBaseUrl:w}=(0,d.C)(),F=(0,r.useContext)(c),M=k||v,x=(0,i.Z)(M),D=null==M?void 0:M.replace("pathname://","");let A=void 0!==D?(O=D,N&&(e=>e.startsWith("/"))(O)?w(O):O):void 0;var O;A&&x&&(A=(0,u.applyTrailingSlash)(A,{trailingSlash:X,baseUrl:y}));const E=(0,r.useRef)(!1),R=p?a.OL:a.rU,_=l.Z.canUseIntersectionObserver,I=(0,r.useRef)();(0,r.useEffect)((()=>(!_&&x&&null!=A&&window.docusaurus.prefetch(A),()=>{_&&I.current&&I.current.disconnect()})),[I,A,_,x]);const B=null!==(t=null==A?void 0:A.startsWith("#"))&&void 0!==t&&t,L=!A||!x||B;return A&&x&&!B&&!C&&F.collectLink(A),L?r.createElement("a",T(T({href:A},M&&!x&&{target:"_blank",rel:"noopener noreferrer"}),S)):r.createElement(R,T((U=T({},S),s(U,h({onMouseEnter:()=>{E.current||null==A||(window.docusaurus.preload(A),E.current=!0)},innerRef:e=>{var t,n;_&&e&&x&&(t=e,n=()=>{null!=A&&window.docusaurus.prefetch(A)},I.current=new window.IntersectionObserver((e=>{e.forEach((e=>{t===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(I.current.unobserve(t),I.current.disconnect(),n())}))})),I.current.observe(t))},to:A||""}))),p&&{isActive:G,activeClassName:b}));var U}},35096:function(e,t,n){function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{b:function(){return r},Z:function(){return a}})},25026:function(e,t,n){n.d(t,{C:function(){return o},Z:function(){return i}});var r=n(11368),a=n(35096);function o(){const{siteConfig:{baseUrl:e="/",url:t}={}}=(0,r.Z)();return{withBaseUrl:(n,r)=>function(e,t,n,{forcePrependBaseUrl:r=!1,absolute:o=!1}={}){if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(r)return t+n;const i=n.startsWith(t)?n:t+n.replace(/^\//,"");return o?e+i:i}(t,e,n,r)}}function i(e,t={}){const{withBaseUrl:n}=o();return n(e,t)}},67271:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){const{trailingSlash:n,baseUrl:r}=t;if(e.startsWith("#"))return e;if(void 0===n)return e;const[a]=e.split(/[#?]/),o="/"===a||a===r?a:(i=a,n?function(e){return e.endsWith("/")?e:`${e}/`}(i):function(e){return e.endsWith("/")?e.slice(0,-1):e}(i));var i;return e.replace(a,o)}},67023:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.uniq=t.applyTrailingSlash=void 0;var a=n(67271);Object.defineProperty(t,"applyTrailingSlash",{enumerable:!0,get:function(){return r(a).default}});var o=n(11080);Object.defineProperty(t,"uniq",{enumerable:!0,get:function(){return r(o).default}})},11080:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return Array.from(new Set(e))}},26818:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return T},contentTitle:function(){return v},metadata:function(){return b},toc:function(){return G},default:function(){return N}});var r=n(3905),a=n(44035),o=n(93054),i=n(29415),l=n(22425),c=n(70814),d=n(39130),u=Object.defineProperty,p=Object.defineProperties,s=Object.getOwnPropertyDescriptors,h=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable,f=(e,t,n)=>t in e?u(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,k=(e,t)=>{for(var n in t||(t={}))m.call(t,n)&&f(e,n,t[n]);if(h)for(var n of h(t))g.call(t,n)&&f(e,n,t[n]);return e};const T={id:"touchgfx-generator",title:"Generator User Guide"},v=void 0,b={unversionedId:"development/touchgfx-hal-development/touchgfx-generator",id:"development/touchgfx-hal-development/touchgfx-generator",isDocsHomePage:!1,title:"Generator User Guide",description:"TouchGFX Generator, a part of X-CUBE-TOUCHGFX, is a STM32CubeMX Additional-Software component that helps developers configure TouchGFX to run on their hardware platform. Based on existing STM32CubeMX settings and user input TouchGFX Generator will generate the files required to configure a working TouchGFX application. TouchGFX HAL, TouchGFX OSAL \ubc0f TouchGFX Configuration\uc744 \uc704\ud55c \ud30c\uc77c\uc774 \uc5ec\uae30\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4.",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/development/touchgfx-hal-development/touchgfx-generator.mdx",sourceDirName:"development/touchgfx-hal-development",slug:"/development/touchgfx-hal-development/touchgfx-generator",permalink:"/4.18/ko/docs/development/touchgfx-hal-development/touchgfx-generator",tags:[],version:"current",frontMatter:{id:"touchgfx-generator",title:"Generator User Guide"},sidebar:"docs",previous:{title:"Abstraction Layer Architecture",permalink:"/4.18/ko/docs/development/touchgfx-hal-development/touchgfx-architecture"},next:{title:"LTDC/Parallel RGB",permalink:"/4.18/ko/docs/development/touchgfx-hal-development/scenarios/scenarios-ltdc-parallel-rgb"}},G=[{value:"TouchGFX Generator \ud65c\uc131\ud654",id:"enabling-touchgfx-generator",children:[],level:2},{value:"\uc0dd\uc131 \ucf54\ub4dc \uc544\ud0a4\ud14d\ucc98",id:"generated-code-architecture",children:[],level:2},{value:"\uae30\ub2a5 \uac1c\uc694",id:"feature-overview",children:[],level:2},{value:"Display",id:"display",children:[{value:"Interface and dimensions",id:"interface-and-dimensions",children:[],level:3},{value:"Framebuffer Pixel Format",id:"framebuffer-pixel-format",children:[],level:3},{value:"Buffering Strategy",id:"buffering-strategies",children:[],level:3}],level:2},{value:"Driver",id:"driver",children:[{value:"Application Tick Source",id:"application-tick-source",children:[],level:3},{value:"Graphics Accelerator",id:"graphics-accelerator",children:[],level:3},{value:"Real-Time Operating System",id:"real-time-operating-system",children:[{value:"\uae30\ud0c0 CMSIS \ud638\ud658 OS",id:"other-cmsis-compliant-os",children:[],level:4}],level:3},{value:"\ucd94\uac00 \uae30\ub2a5",id:"additional-features",children:[{value:"External Data Reader",id:"external-data-reader",children:[],level:4},{value:"8bit LTDC Color Look-up Table",id:"8bit-ltdc-color-look-up-table",children:[],level:4}],level:3}],level:2},{value:"Video Decoding",id:"video-decoding",children:[{value:"Type",id:"video-decoding-type",children:[],level:3},{value:"Number of Videos",id:"video-decoding-number",children:[],level:3},{value:"Strategy",id:"video-decoding-strategy",children:[],level:3},{value:"Buffer size",id:"video-decoding-buffer-size",children:[],level:3}],level:2},{value:"\uc0dd\uc131\ub41c \ud504\ub85c\uc81d\ud2b8",id:"generated-project",children:[],level:2},{value:"TouchGFX Designer \ud504\ub85c\uc81d\ud2b8",id:"touchgfx-designer-\ud504\ub85c\uc81d\ud2b8",children:[],level:2},{value:"\uc0dd\uc131\ub41c \ub3d9\uc791 \uc218\uc815",id:"\uc0dd\uc131\ub41c-\ub3d9\uc791-\uc218\uc815",children:[],level:2},{value:"\ud504\ub85c\uc81d\ud2b8 \uc5c5\uadf8\ub808\uc774\ub4dc",id:"upgrading-projects",children:[],level:2}],C={toc:G};function N(e){var t,n=e,{components:u}=n,f=((e,t)=>{var n={};for(var r in e)m.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&h)for(var r of h(e))t.indexOf(r)<0&&g.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=k(k({},C),f),p(t,s({components:u,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"TouchGFX Generator, a part of X-CUBE-TOUCHGFX, is a STM32CubeMX Additional-Software component that helps developers configure TouchGFX to run on their hardware platform. Based on existing STM32CubeMX settings and user input TouchGFX Generator will generate the files required to configure a working TouchGFX application. TouchGFX HAL, TouchGFX OSAL \ubc0f TouchGFX Configuration\uc744 \uc704\ud55c \ud30c\uc77c\uc774 \uc5ec\uae30\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4."),(0,r.kt)("p",null,"Once code is generated through STM32CubeMX, the TouchGFX project can be opened through TouchGFX Designer where the UI is developed. TouchGFX Designer automatically adds any additional generated code files to the target IDE project that was configured for the project in STM32CubeMX."),(0,r.kt)("h2",k({},{id:"enabling-touchgfx-generator"}),"TouchGFX Generator \ud65c\uc131\ud654"),(0,r.kt)("p",null,'Users gain access to adding functionality from X-CUBEs by pressing the "Select Components" button.'),(0,r.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/enable-generator.png",mdxType:"Figure"},"Selecting Additional Software in STM32CubeMX"),(0,r.kt)("p",null,"\ub2e4\uc74c \uadf8\ub9bc\uc740 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c TouchGFX Generator\ub97c \ud65c\uc131\ud654\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4:"),(0,r.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/add-generator-v4.17.png",width:"580",mdxType:"Figure"},"TouchGFX Generator \ud65c\uc131\ud654"),(0,r.kt)("p",null,"If enabling TouchGFX for a Dual-Core MCU, be sure to enable for the the correct context. TouchGFX can only be enabled for a single context:"),(0,r.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/add-generator-dual-core-v4.17.png",mdxType:"Figure"},"Enabling TouchGFX Generator for Dual Core"),(0,r.kt)("h2",k({},{id:"generated-code-architecture"}),"\uc0dd\uc131 \ucf54\ub4dc \uc544\ud0a4\ud14d\ucc98"),(0,r.kt)("p",null,"TouchGFX Generator\uc758 \uae30\ub2a5\uc744 \uc124\uba85\ud558\uae30\uc5d0 \uc55e\uc11c, \uc0dd\uc131\ub41c \ucf54\ub4dc\uc758 \uc544\ud0a4\ud14d\ucc98\uc640 \uac1c\ubc1c\uc790\uac00 \uc774\ub97c \uc0ac\uc6a9\ud574 \uad6c\uc131 \ubc0f \ub3d9\uc791\uc744 \uc0ac\uc6a9\uc790 \uc9c0\uc815\ud558\ub294 \ubc29\ubc95\uc744 \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4."),(0,r.kt)("p",null,"Handwritten user code in files generated by STM32CubeMX is protected through the use of ",(0,r.kt)("strong",{parentName:"p"},"User Code")," sections placed strategically throughout the code generated by STM32CubeMX (C code).\xa0\xa0TouchGFX Generator\uc5d0\uc11c \uc0dd\uc131\ub41c \ucf54\ub4dc(C++ \ucf54\ub4dc) \uc5d0\uc11c\ub294 \uc0c1\uc18d\uc744 \ud1b5\ud574 \uc774\ub7ec\ud55c \uc720\uc5f0\uc131\uc774 \ub2ec\uc131\ub429\ub2c8\ub2e4."),(0,r.kt)("p",null,"When TouchGFX Generator is added through ",(0,r.kt)("em",{parentName:"p"},"Additional Software")," and enabled, STM32CubeMX will always create a ",(0,r.kt)("em",{parentName:"p"},"TouchGFX")," folder for the project. The folder always contains the same files, regardless of configuration, while the content of the files changes according to STM32CubeMX and User configuration."),(0,r.kt)("p",null,"The listing below shows an overview of the content of a STM32CubeMX project with TouchGFX Generator ",(0,r.kt)("em",{parentName:"p"},"enabled"),", with emphasis on TouchGFX related files. \ubaa9\ub85d \ub4a4\uc5d0 \ub098\uc624\ub294 \ud45c\uc5d0\ub294 \uac00\uc7a5 \uc911\uc694\ud55c \uc5d4\ud2b8\ub9ac\uc758 \ucc45\uc784\uc774 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4:"),(0,r.kt)(l.Z,{mdxType:"CodeHeader"},"TouchGFX \ud3f4\ub354"),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{}),"\u2502   .mxproject\n\u2502   myproject.ioc\n\u251c\u2500\u2500\u2500Core\n\u251c\u2500\u2500\u2500Drivers\n\u251c\u2500\u2500\u2500EWARM\n\u251c\u2500\u2500\u2500Middlewares\n\u2514\u2500\u2500\u2500TouchGFX\n    \u2502   ApplicationTemplate.touchgfx.part\n    \u251c\u2500\u2500\u2500App\n    \u2502       app_touchgfx.c\n    \u2502       app_touchgfx.h\n    \u2514\u2500\u2500\u2500target\n        \u2502   STM32TouchController.cpp\n        \u2502   STM32TouchController.hpp\n        \u2502   TouchGFXGPIO.cpp\n        \u2502   TouchGFXHAL.cpp\n        \u2502   TouchGFXHAL.hpp\n        \u2502\n        \u2514\u2500\u2500\u2500generated\n                OSWrappers.cpp\n                TouchGFXConfiguration.cpp\n                TouchGFXGeneratedHAL.cpp\n                TouchGFXGeneratedHAL.hpp\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",k({parentName:"tr"},{align:null}),"\ud3f4\ub354"),(0,r.kt)("th",k({parentName:"tr"},{align:null}),"\ucc45\uc784"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",k({parentName:"tr"},{align:null}),"myproject.ioc"),(0,r.kt)("td",k({parentName:"tr"},{align:null}),"STM32CubeMX Project file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",k({parentName:"tr"},{align:null}),"Core"),(0,r.kt)("td",k({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"main.c\xa0"),"\ubc0f \uc2a4\ud0c0\ud2b8\uc5c5 \ucf54\ub4dc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",k({parentName:"tr"},{align:null}),"Drivers"),(0,r.kt)("td",k({parentName:"tr"},{align:null}),"CMSIS \ubc0f MCU \uc81c\ud488\uad70 \ub4dc\ub77c\uc774\ubc84")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",k({parentName:"tr"},{align:null}),"EWARM"),(0,r.kt)("td",k({parentName:"tr"},{align:null}),"IDE \ud504\ub85c\uc81d\ud2b8\ud3f4\ub354 (EWARM, MDK-ARM \ub610\ub294 STM32CubeIDE)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",k({parentName:"tr"},{align:null}),"Middlewares"),(0,r.kt)("td",k({parentName:"tr"},{align:null}),"TouchGFX \ub77c\uc774\ube0c\ub7ec\ub9ac/\ud5e4\ub354\ud30c\uc77c\uacfc FreeRTOS \uac19\uc740 \ud0c0\uc0ac \uc18c\ud504\ud2b8\uc6e8\uc5b4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",k({parentName:"tr"},{align:null}),"ApplicationTemplate.touchgfx.part"),(0,r.kt)("td",k({parentName:"tr"},{align:null}),"The .part file is updated by STM32CubeMX with information that is relevant to TouchGFX Designer project, e.g. screen dimensions and bit depth")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",k({parentName:"tr"},{align:null}),"App"),(0,r.kt)("td",k({parentName:"tr"},{align:null}),"X-CUBE interface to STM32CubeMX. ",(0,r.kt)("inlineCode",{parentName:"td"},"app_touchgfx.c"),"\uc5d0\ub294 TouchGFX\ub97c \uac1c\uc2dc\ud558\uace0 \uba54\uc778 \ub8e8\ud504\ub97c \uc2dc\uc791\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ud568\uc218\xa0",(0,r.kt)("inlineCode",{parentName:"td"},"MX_TouchGFX_Process(void)\xa0"),"\ubc0f\xa0",(0,r.kt)("inlineCode",{parentName:"td"},"MX_TouchGFX_Init(void)"),"\uc5d0 \ub300\ud55c \uc815\uc758\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",k({parentName:"tr"},{align:null}),"target/generated"),(0,r.kt)("td",k({parentName:"tr"},{align:null}),"This sub-folder contains the read-only files that get overwritten by STM32CubeMX when configurations change. ",(0,r.kt)("inlineCode",{parentName:"td"},"TouchGFXGeneratedHAL.cpp")," is a sub-class of the TouchGFX class ",(0,r.kt)("inlineCode",{parentName:"td"},"HAL")," and contains the code that STM32CubeMX can generate based on its current configuration. ",(0,r.kt)("inlineCode",{parentName:"td"},"OSWrappers.cpp\xa0")," (OSAL)\uc5d0\ub294 TouchGFX Engine\uacfc\uc758 \ub3d9\uae30\ud654\uc5d0 \ud544\uc694\ud55c \ud568\uc218\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uace0, \ub9c8\uc9c0\ub9c9\uc73c\ub85c ",(0,r.kt)("inlineCode",{parentName:"td"},"TouchGFXConfiguration.cpp"),"\uc5d0\ub294 HAL\uc744 \ud3ec\ud568\ud558\uc5ec TouchGFX\ub97c \uad6c\uc131\ud558\uae30 \uc704\ud55c \ucf54\ub4dc\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",k({parentName:"tr"},{align:null}),"target"),(0,r.kt)("td",k({parentName:"tr"},{align:null}),"Contains the bulk of files that can be modified by the user to extend the behavior of the HAL or to override configurations generated by STM32CubeMX. ",(0,r.kt)("inlineCode",{parentName:"td"},"STM32TouchController.cpp"),"\uc5d0\ub294 \ube48 \ud130\uce58 \ucee8\ud2b8\ub864\ub7ec \uc778\ud130\ud398\uc774\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. ",(0,r.kt)("inlineCode",{parentName:"td"},"TouchGFXHAL.cpp"),"\ub294 ",(0,r.kt)("inlineCode",{parentName:"td"},"TouchGFXGeneratedHAL"),"\uc758 \ud558\uc704 \ud074\ub798\uc2a4\uc778 ",(0,r.kt)("inlineCode",{parentName:"td"},"TouchGFXHAL"),"\uc744 \uc815\uc758\ud569\ub2c8\ub2e4.")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXConfiguration.cpp"),"\uc5d0\ub294 HAL\uc744 \uad6c\uc131\ud558\ub294 \ud568\uc218\uc640 TouchGFX\uc758 \uba54\uc778 \ub8e8\ud504\ub97c \uc2dc\uc791\ud558\ub294 \ud568\uc218\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\ub2e4\ub294 \uc810\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ud3b8\uc9d1\uc774 \uac00\ub2a5\ud55c \uc0ac\uc6a9\uc790 \ud074\ub798\uc2a4\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXHAL"),"\uc5d0\uc11c \ucd94\uac00 \uad6c\uc131\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. HAL\uc758 \uc77c\ubc18\uc801\uc778 \uc544\ud0a4\ud14d\ucc98\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4:"),(0,r.kt)(a.Z,{imageSource:"/img/development/touchgfx-hal-development/code-architecture.png",noShadow:!0,width:"200",mdxType:"Figure"},"\uc0dd\uc131\ub41c \ucf54\ub4dc\uc758 \uacc4\uce35 \uad6c\uc870"),(0,r.kt)("h2",k({},{id:"feature-overview"}),"\uae30\ub2a5 \uac1c\uc694"),(0,r.kt)("p",null,"Having enabled TouchGFX Generator, four groups exist in the user interface:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"Dependencies"))," - \uc774 \uadf8\ub8f9\uc5d0\ub294 \uad6c\uc131\uc5d0\uc11c\uc758 \uc885\uc18d\uc131, \uacbd\uace0 \ub610\ub294 \uad6c\uccb4\uc801 \uc624\ub958\uc5d0 \ub300\ud574 \uac1c\ubc1c\uc790\uc5d0\uac8c \uc81c\uacf5\ub418\ub294 \uc54c\ub9bc\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ud2b8\ub9ac\uac00 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub294 \uc774 \uadf8\ub8f9\uc774 \uc228\uaca8\uc9d1\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"Display")),"\xa0- \uc774 \uadf8\ub8f9\uc5d0\ub294 \uc778\ud130\ud398\uc774\uc2a4, \ud504\ub808\uc784 \ubc84\ud37c \ube44\ud2b8 \uc2ec\ub3c4, \ub108\ube44 \ubc0f \ub192\uc774 \uac19\uc774 \ub514\uc2a4\ud50c\ub808\uc774\uc640 \uad00\ub828\ub41c \uc124\uc815\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc124\uc815\uc740 TouchGFX \ud504\ub85c\uc81d\ud2b8\uc758 \uce94\ubc84\uc2a4 \ud06c\uae30\ub294 \ubb3c\ub860\uc774\uace0 \uc790\uc0b0\uc5d0 \ub300\ud574 \uc0dd\uc131\ub41c \ucf54\ub4dc\uc5d0 \uc9c1\uc811\uc801\uc778 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"Driver")),"\xa0- \uc774 \uadf8\ub8f9\uc740 \uc0ac\uc6a9\uc790\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158, \uadf8\ub798\ud53d \uac00\uc18d\uae30 \ubc0f RTOS\uc758 \ud2f1 \uc18c\uc2a4\uc640 \uad00\ub828\ub41c \ub2e4\uc591\ud55c \uae30\uc131 \ub4dc\ub77c\uc774\ubc84\uc5d0 \ub300\ud574 \uc635\ud2b8\uc778(opt-in) \ud560 \uc218 \uc788\uac8c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Since STM32CubeMX supports FreeRTOS (CMSIS RTOS v1 and v2) configurations, TouchGFX Generator provides drivers for each of these options."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"Video Decoding"))," - This group allows the user to enable hardware or software video decoding. This option is necessary to work with the video widget. Note that not all MCUs support video decoding.")),(0,r.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/four-sections.png",width:"600",mdxType:"Figure"},"TouchGFX Generator has four groups: Dependencies, Display, Driver and Video Decoding"),(0,r.kt)("h2",k({},{id:"display"}),"Display"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Display"),"\xa0\uadf8\ub8f9\uc5d0\ub294 \ub514\uc2a4\ud50c\ub808\uc774\uc640 \uad00\ub828\ub41c \uad6c\uc131(\uc608: \uc778\ud130\ud398\uc774\uc2a4, \ud06c\uae30 \ubc0f \ubc84\ud37c\ub9c1 \uc804\ub7b5) \uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h3",k({},{id:"interface-and-dimensions"}),"Interface and dimensions"),(0,r.kt)("p",null,"\ud604\uc7ac STM32 \ub9c8\uc774\ud06c\ub85c\ucee8\ud2b8\ub864\ub7ec\uc11c\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc5ec\ub7ec \ub514\uc2a4\ud50c\ub808\uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Parallel RGB (LTDC)"),(0,r.kt)("li",{parentName:"ul"},"MIPI DSI"),(0,r.kt)("li",{parentName:"ul"},"FMC"),(0,r.kt)("li",{parentName:"ul"},"SPI")),(0,r.kt)("p",null,"In the case of MCUs with a display connected to an LTDC or FMC ",(0,r.kt)("em",{parentName:"p"},"TouchGFX Generator")," can generate code to transfer the framebuffer to the connected display. For DSI and SPI interfaces drivers must be implemented by developers themselves."),(0,r.kt)(i.Z,{mdxType:"FurtherReading"},"See section ",(0,r.kt)(d.Z,{to:"scenarios/scenarios-ltdc-parallel-rgb",mdxType:"Link"},"Scenarios")," for concrete examples of code for different display interfaces."),(0,r.kt)("h3",k({},{id:"framebuffer-pixel-format"}),"Framebuffer Pixel Format"),(0,r.kt)("p",null,'The following framebuffer pixel formats are currently supported by TouchGFX Generator. All options are available when using "Custom" display interface, otherwise options are restricted to display controller settings (e.g. configuring the LTDC Framebuffer format to "RGB565" will limit the options to "RGB565" in TouchGFX Generator).'),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"BW (1bpp)"),(0,r.kt)("li",{parentName:"ol"},"Grey2 (2bpp)"),(0,r.kt)("li",{parentName:"ol"},"Grey4 (4bpp)"),(0,r.kt)("li",{parentName:"ol"},"ABRG2222 (8bpp)"),(0,r.kt)("li",{parentName:"ol"},"ARGB2222 (8bpp)"),(0,r.kt)("li",{parentName:"ol"},"BGRA2222 (8bpp)"),(0,r.kt)("li",{parentName:"ol"},"RGBA2222 (8bpp)"),(0,r.kt)("li",{parentName:"ol"},"RGB565 (16bpp)"),(0,r.kt)("li",{parentName:"ol"},"RGB888 (24bpp)"),(0,r.kt)("li",{parentName:"ol"},"ARGB8888 (32bpp)"),(0,r.kt)("li",{parentName:"ol"},"XRGB8888 (32bpp)")),(0,r.kt)(o.Z,{mdxType:"Note"},"Some pixel formats have no- or only partial ChromART (DMA2D) support."),(0,r.kt)(c.Z,{mdxType:"Caution"},(0,r.kt)("b",null,"For Cortex F7/H7"),": If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then the DCache is flushed by the generated code prior to DMA2D (if configured in the Generator) accessing it. Remember to enable ",(0,r.kt)("b",null,"CPU Cache")," in the ",(0,r.kt)("b",null,"System Core")," settings for ",(0,r.kt)("b",null,"Cortex M7")," in STM32CubeMX in order for this caching mechanic to work."),(0,r.kt)(i.Z,{mdxType:"FurtherReading"},"See the ",(0,r.kt)(d.Z,{to:"../board-bring-up/how-to/02-cpu-running#cache-on-f7-and-h7",mdxType:"Link"},"Cache on F7 and H7")," subsection for more information about CPU caching."),(0,r.kt)("h3",k({},{id:"buffering-strategies"}),"Buffering Strategy"),(0,r.kt)("p",null,"TouchGFX Generator\ub97c \ud1b5\ud574 \ub2e4\uc74c\uacfc \uac19\uc740 \ud504\ub808\uc784 \ubc84\ud37c \uc804\ub7b5\uc744 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Single Buffer "),"(\ub2e8\uc77c \ubc84\ud37c)\xa0- \uc624\uc9c1 \ud558\ub098\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud504\ub808\uc784 \ubc84\ud37c\ub9cc \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc131\ub2a5\uc774 \uc81c\ud55c\ub420 \uc218 \uc788\uc9c0\ub9cc, \uba54\ubaa8\ub9ac\ub97c \ube44\uad50\uc801 \ub35c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. 'Buffer Location' \uad6c\uc131\uc744 \uc0ac\uc6a9\ud574 \ub0b4\ubd80 RAM\uc5d0 \ubc30\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00\uc801\uc778 \ucd5c\uc801\ud654\ub97c \uc704\ud574 \uc0ac\uc6a9\uc790\ub294 \ub514\uc2a4\ud50c\ub808\uc774 \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \ud604\uc7ac \ucc98\ub9ac \uc911\uc778 \ub77c\uc778\uc744 \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc774 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\uba74 \ud604\uc7ac \ud504\ub808\uc784 \ub3d9\uc548 \ub514\uc2a4\ud50c\ub808\uc774\uc5d0 \uc774\ubbf8 \uc804\uc1a1\ub41c \uba54\ubaa8\ub9ac\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Double Buffer "),"(\uc774\uc911 \ubc84\ud37c) - 2\uac1c\uc758 \ud504\ub808\uc784 \ubc84\ud37c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubcf4\ud1b5\uc740 \uba54\ubaa8\ub9ac\uc758 \ube44\uc6a9 \ub300\ube44 \uc131\ub2a5\uc744 \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Partial Buffer "),"(\ubd80\ubd84 \ubc84\ud37c)\xa0- \ud504\ub808\uc784 \ubc84\ud37c\uc5d0\uc11c \uc0ac\uc6a9\uc790\uac00 \uc815\uc758\ud55c 1\uac1c \uc774\uc0c1\uc758 \uba54\ubaa8\ub9ac \uc9d1\ud569\uccb4(chunk) \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc804\ub7b5\uc740 \uc678\ubd80 RAM\uc5d0 \uc758\uc874\ud558\uc9c0 \uc54a\uace0 \uc804\uccb4 \ud504\ub808\uc784 \ubc84\ud37c\uac00 \uac00\uc6a9 \uba54\ubaa8\ub9ac\ub97c \ucd08\uacfc\ud560 \uc218 \uc788\ub3c4\ub85d \ub514\uc2a4\ud50c\ub808\uc774\ub97c \uc0ac\uc6a9\ud558\ub294 \uc800\ube44\uc6a9 \uc194\ub8e8\uc158\uc744 \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4.")),(0,r.kt)("p",null,'Single Buffer \ubc0f Double Buffer\uc758 \uacbd\uc6b0, \uc0ac\uc6a9\uc790\uac00 \ub2e4\uc74c\uacfc \uac19\uc740 \uc635\uc158\uc744 \uc81c\uacf5\ud558\ub294 "Buffer Location" \uad6c\uc131\uc744 \ud1b5\ud574 \uc704\uce58\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"By Allocation"),"\xa0- \ub9c1\ucee4\uac00 \ub9c1\ucee4 \uc2a4\ud06c\ub9bd\ud2b8\uc5d0 \ub530\ub77c \ud504\ub808\uc784 \ubc84\ud37c \uba54\ubaa8\ub9ac\ub97c \ubc30\uce58\ud560 \uc218 \uc788\uac8c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ub0b4\ubd80 RAM\uc5d0 \ubc30\uce58\ub418\ub3c4\ub85d \uae30\ubcf8 \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"By Address\xa0"),"- \uc0ac\uc6a9\uc790\uac00 1\uac1c(Single) \ub610\ub294 2\uac1c(Double) \uc758 \ud504\ub808\uc784 \ubc84\ud37c \uc8fc\uc18c\ub97c \uc815\uc758\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Partial Buffer\xa0"),"\uc804\ub7b5\uc5d0\uc11c\ub294 \uc0ac\uc6a9\uc790\uac00 \ub2e4\uc74c\uacfc \uac19\uc740 \ud30c\ub77c\ubbf8\ud130\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ube14\ub85d \uc218(\ub0b4\ubd80 RAM\uc5d0 \ud56d\uc0c1 \ubc30\uce58)"),(0,r.kt)("li",{parentName:"ul"},"\ube14\ub85d \ud06c\uae30(\ubc14\uc774\ud2b8)")),(0,r.kt)("p",null,"\ubd80\ubd84 \ubc84\ud37c \uc804\ub7b5\uacfc \uad00\ub828\ub41c \uba87 \uac00\uc9c0 \ud575\uc2ec \uac1c\ub150\ub4e4\uc744 \uc774\ud574\ud558\ub824\uba74 \ubd80\ubd84 \ud504\ub808\uc784 \ubc84\ud37c\ub97c \uc774\uc6a9\ud55c \uba54\ubaa8\ub9ac \uc694\uad6c \uc0ac\ud56d \uac10\uc18c\uc5d0 \ub300\ud55c\xa0",(0,r.kt)("a",k({parentName:"p"},{href:"../scenarios/lowering-memory-usage-with-partial-framebuffer"}),"\uc804\uc6a9 \ubb38\uc11c"),"\ub97c \uc77d\uc5b4\ubcf4\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 \ubd80\ubd84 \ud504\ub808\uc784 \ubc84\ud37c\ub97c \ub2ec\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uac1c\ub150\uc801\uc73c\ub85c \ubcf4\uc5ec\uc8fc\uba70, \uc5ec\uae30 \ub098\uc628 \ucf54\ub4dc\ub294 TouchGFX Generator\uc5d0\uc11c \uc0dd\uc131\ub41c \uac83\uacfc \ub2e4\uc18c \ucc28\uc774\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc804\ub7b5\uc5d0 \ub300\ud574 \uc0dd\uc131\ub41c \ucf54\ub4dc\uc758 \uad6c\uccb4\uc801\uc778 \uc608",(0,r.kt)("a",k({parentName:"p"},{href:"scenarios/scenarios-framebuffer-strategies"}),"\ub294\xa0\ud504\ub808\uc784 \ubc84\ud37c \uc804\ub7b5"),"\uc744 \ucc38\uc870\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4."),(0,r.kt)("h2",k({},{id:"driver"}),"Driver"),(0,r.kt)("p",null,"\ub4dc\ub77c\uc774\ubc84 \uc139\uc158\uc5d0\uc11c \uac1c\ubc1c\uc790\ub294 TouchGFX AL\uc758 \ub2e4\uc591\ud55c \ucc45\uc784\uc5d0 \ub9de\ub294 \ub4dc\ub77c\uc774\ubc84\ub97c \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h3",k({},{id:"application-tick-source"}),"Application Tick Source"),(0,r.kt)("p",null,"\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc704\ud55c application tick source\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\ub3d9\ud558\ub294 \ubc29\ubc95\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uac1c\ubc1c\uc790\uc5d0\uac8c\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc635\uc158\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"LTDC"),' - If LTDC is selected as the interface the "Display" group the Application Tick Source can be "LTDC". \uc989, ',(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFX Generator"),"\uac00 ",(0,r.kt)("inlineCode",{parentName:"li"},"OSWrappers::signalVSync()"),"\ub97c \ud638\ucd9c\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc9c4\ud589\uc2dc\ud0a4\ub294 TouchGFXGeneratedHAL\xa0\ud074\ub798\uc2a4\uc5d0 \ub4dc\ub77c\uc774\ubc84 \ud568\uc218(LTDC \uc778\ud130\ub7fd\ud2b8 \ud578\ub4e4\ub7ec)\ub97c \uc124\uce58\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Custom and FMC")," - In this case, the developer is required to implement a handler that drives the application forward by calling ",(0,r.kt)("inlineCode",{parentName:"li"},"OSWrappers::signalVSync()")," repeatedly.")),(0,r.kt)("h3",k({},{id:"graphics-accelerator"}),"Graphics Accelerator"),(0,r.kt)("p",null,"\uac1c\ubc1c\uc790\ub294 \uadf8\ub798\ud53d \uac00\uc18d\uacfc \uad00\ub828\ud574 \uc138 \uac00\uc9c0 \uc635\uc158\uc744 \uac16\uac8c \ub429\ub2c8\ub2e4:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"None"),"\xa0- \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud504\ub808\uc784 \ub80c\ub354\ub9c1\uc744 \uc704\ud574 CPU\ub9cc \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Chrom-ART(DMA2D)"),"\xa0-\xa0\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uac00\ub2a5\ud558\uba74 Chrom-ART \uce69\uc744 \uc0ac\uc6a9\ud574 \ud53d\uc140\uc744 \uc774\ub3d9 \ubc0f \ud63c\ud569\ud558\uae30 \ub54c\ubb38\uc5d0 CPU \uc8fc\uae30\uac00 \ub2e8\ucd95\ub429\ub2c8\ub2e4. TouchGFX Generator\uac00 \ub4dc\ub77c\uc774\ubc84\ub97c \uc124\uce58\ud558\ubbc0\ub85c \uac1c\ubc1c\uc790\ub294 \uc5b4\ub5a0\ud55c \uc870\uce58\ub3c4 \ucde8\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("p",null,"TouchGFX Generator\uc5d0\uc11c \uacf5\uae09\ub418\ub294 Chrom-ART(DMA2D) \ub4dc\ub77c\uc774\ubc84\uc5d0\uc11c\ub294 \ub450 \uac00\uc9c0 \ubc29\uc2dd\uc73c\ub85c TransferCompleteInterrupt\ub97c \uc218\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"STM32Cube HAL \ub4dc\ub77c\uc774\ubc84\ub97c \uc0ac\uc6a9\ud574 dma2d \ud578\ub4e4\ub7ec\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"hdma2d.XferCpltCallback"),"\uc5d0 \ucf5c\ubc31 \ud568\uc218\ub97c \ub4f1\ub85d\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DMA2D_IRQHandler()\xa0"),"\uc778\ud130\ub7fd\ud2b8 \ud578\ub4e4\ub7ec\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.")),(0,r.kt)("p",null,"Switching between these two is done by enabling or disabling the DMA2D global interrupt in the NVIC Settings in STM32CubeMX for DMA2D IP. \uc804\uc5ed \uc778\ud130\ub7fd\ud2b8\ub97c \ud65c\uc131\ud654\ud558\uba74 \uc635\uc158 1) \uc5d0 \ub300\ud55c \ucf54\ub4dc\uac00 \uc0dd\uc131\ub418\uace0, \uc804\uc5ed \uc778\ud130\ub7fd\ud2b8\ub97c \ube44\ud65c\uc131\ud654\ud558\uba74 \uc635\uc158 2) \uc5d0 \ub300\ud55c \ucf54\ub4dc\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4."),(0,r.kt)(o.Z,{mdxType:"Note"},(0,r.kt)("li",null,"DMA2D\uc5d0\uc11c \uc804\uc5ed \uc778\ud130\ub7fd\ud2b8\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 'IRQ handler'\uac00 'DMA2D HAL \ud578\ub4e4\ub7ec'\ub97c \ud638\ucd9c\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4(\uc774\uac83\uc774 \uae30\ubcf8 \uc124\uc815\ub41c \ub3d9\uc791)."),(0,r.kt)("li",null,"\uc804\uc5ed \uc778\ud130\ub7fd\ud2b8\uac00 \ud65c\uc131\ud654\ub41c \uc0c1\ud0dc\uc5d0\uc11c DMA2D\uc5d0\uc11c 'IRQ handler' \ubc0f 'Call HAL handler'\ub97c \ube44\ud65c\uc131\ud654\ud558\uba74 \ub4f1\ub85d\ub41c \ucf5c\ubc31(callback) \uc774 \uc808\ub300\ub85c \ud638\ucd9c\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("h3",k({},{id:"real-time-operating-system"}),"Real-Time Operating System"),(0,r.kt)("p",null,"\uac1c\ubc1c\uc790\ub294 TouchGFX\uc5d0\uc11c \uc5b4\ub5a4 RTOS\ub4e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(OS\uac00 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub3c4). AL(Abstraction Layer) \uc544\ud0a4\ud14d\ucc98\uc5d0 \uc124\uba85\ub418\uc5b4 \uc788\ub4ef\uc774, TouchGFX Engine\uc740\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"OSWrappers "),"\uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud574 \uba54\uc778 \uc774\ubca4\ud2b8 \ub8e8\ud504\ub97c \ube44\ub86f\ud574 \ud504\ub808\uc784 \ubc84\ud37c \uc561\uc138\uc2a4\ub97c \uc0ac\uc6a9\uc790\uac00 \uc120\ud0dd\ud55c RTOS\uc640 \ub3d9\uae30\ud654\ud569\ub2c8\ub2e4. When developers select an operating system via TouchGFX Generator code will be generated to syncronize internally via primitives for the OS of choice. The operating system still has to be configured through STM32CubeMX to determine stack size, among other things."),(0,r.kt)("p",null,"FreeRTOS (CMSIS OS compliant) and AzureRTOS (For H7s only) can be configured directly from within STM32CubeMX and the TouchGFX Generator providing the user with generated code for both task definitions and TouchGFX RTOS driver. TouchGFX Generator can generate CMSIS V1 and CMSIS V2 compliant RTOS drivers which work with any CMSIS compliant RTOS, a driver for running bare metal without an operating system, and a native driver for ThreadX (Through the AzureRTOS X-Cube). In the case of No Operating Systemn developers cannot rely on STM32CubeMX for code generation of task definitions and this must be done in ",(0,r.kt)("em",{parentName:"p"},"user code"),"."),(0,r.kt)(o.Z,{mdxType:"Note"},"All TouchGFX Board Setups available from the designer run FreeRTOS."),(0,r.kt)("p",null,"The following figure shows these options available through the TouchGFX Generator."),(0,r.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/driver-rtos-options-4-17.png",mdxType:"Figure"},"RTOS \ub4dc\ub77c\uc774\ubc84 \uc635\uc158"),(0,r.kt)("p",null,'Concretely, in this image, The AzureRTOS X-CUBE has been enabled, allowing the selection of ThreadX and CMSIS RTOS V2 (ThreadX is CMSIS compliant). If FreeRTOS is enabled the "ThreadX" option is disabled. ThreadX can be enabled through the X-CUBE-AZRTOS-H7 (H7 only) pack.'),(0,r.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/x-cube-azurertos.png",width:"600",mdxType:"Figure"},"X-CUBE-AZRTOS Configuration"),(0,r.kt)("p",null,"\ub2e4\uc74c \ud568\uc218\ub97c \ud638\ucd9c\ud558\uba74 TouchGFX \uba54\uc778 \ub8e8\ud504\uc5d0 \ub4e4\uc5b4\uac11\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"void MX_TouchGFX_Process(void);\n")),(0,r.kt)("p",null,"\uac1c\ubc1c\uc790\ub294 TouchGFX \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud558\ub824\ub294 \uc791\uc5c5\uc5d0 \ub300\ud55c \uc791\uc5c5 \ud578\ub4e4\ub7ec\uc5d0\uc11c \uc774 \ud568\uc218\ub97c \ud638\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4. If the user configured a FeeRTOS task from STM32CubeMX called ",(0,r.kt)("inlineCode",{parentName:"p"},"DefaultTask")," then the following example shows how ",(0,r.kt)("inlineCode",{parentName:"p"},"MX_TouchGFX_Process()")," is called to start TouchGFX in the user code section of its task handler."),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{className:"language-cpp",metastring:"{4}","{4}":!0}),"void StartDefaultTask(void *argument)\n{\n  /* USER CODE BEGIN 5 */\n  MX_TouchGFX_Process();\n  /* USER CODE END 5 */ \n}\n")),(0,r.kt)("p",null,"When FreeRTOS is enabled, STM32CubeMX will also generate a call to ",(0,r.kt)("inlineCode",{parentName:"p"},"osKernelStart();")," which starts the scheduler."),(0,r.kt)("h4",k({},{id:"other-cmsis-compliant-os"}),"\uae30\ud0c0 CMSIS \ud638\ud658 OS"),(0,r.kt)("p",null,"When developers require a different CMSIS compliant OS than what STM32CubeMX can offer (FreeRTOS and ThreadX) he must perform RTOS configuration and task definition manually. \uc77c\ubc18\uc801\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc740 \uc218\ub3d9 \ub2e8\uacc4\ub97c \uac70\uccd0\uc57c \ud569\ub2c8\ub2e4:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"RTOS \uad6c\uc131"),(0,r.kt)("li",{parentName:"ol"},"TouchGFX(",(0,r.kt)("inlineCode",{parentName:"li"},"MX_TouchGFX_Process"),") \ub97c \uc2e4\ud589\ud558\uae30 \uc704\ud55c \uc791\uc5c5 \uc815\uc758"),(0,r.kt)("li",{parentName:"ol"},"\uc2a4\ucf00\uc904\ub7ec \uc2dc\uc791")),(0,r.kt)("p",null,"Here's an example of how to perform steps 2 and 3 for ThreadX, manually. Since STM32CubeMX cannot help with any configuration for operating systems it does not support everything must be done in the provided ",(0,r.kt)("em",{parentName:"p"},"user code sections")," to avoid code being overwritten. \uc544\ub798 \ucf54\ub4dc\ub294 GUI \uc791\uc5c5 \uc815\uc758\uc5d0 \ub300\ud55c \uc758\uc0ac \ucf54\ub4dc\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. Generally, any code that is not generated by STM32CubeMX should be placed in ",(0,r.kt)("em",{parentName:"p"},"user code sections")," that are scattered throughout the file ",(0,r.kt)("inlineCode",{parentName:"p"},"main.c"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),'/* BEGIN USER CODE SECTION */\n#include "tx_api.h"\n\n#define GUI_THREAD_STACK_SIZE         1024\nTX_THREAD gui_thread;\nvoid    gui_thread_entry(ULONG thread_input); //Thread prototype\n/* END USER CODE SECTION */\n\nint main()\n{\n  /* BEGIN USER CODE SECTION - Choose an appropriate one from main.c */\n  /* Allocate the stack for gui thread  */\n  tx_byte_allocate(...);\n\n  /* Create the gui thread.  */\n  tx_thread_create(&gui_thread, "GUI Thread", gui_thread_entry, 0,\n              pointer, GUI_TASK_STACK_SIZE,\n              1, 1, TX_NO_TIME_SLICE, TX_AUTO_START);\n\n  /* END USER CODE SECTION*/\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MX_TouchGFX_Proces"),"s\ub97c \ud638\ucd9c\ud574 \uc791\uc5c5 \ud578\ub4e4\ub7ec \ub0b4\ubd80\uc758 TouchGFX Engine \uba54\uc778 \ub8e8\ud504\ub97c \uc2dc\uc791\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"/* BEGIN USER CODE SECTION */\nvoid gui_thread_entry(ULONG thread_input)\n{\n  MX_TouchGFX_Process();\n}\n/* END USER CODE SECTION*/\n")),(0,r.kt)("p",null,"\uc2a4\ucf00\uc904\ub7ec\ub97c \uc2dc\uc791\ud574 GIU \uc791\uc5c5\uacfc TouchGFX \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uac1c\uc2dc\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"/* BEGIN USER CODE SECTION */\ntx_kernel_enter();\n/* END USER CODE SECTION*/\n")),(0,r.kt)("h3",k({},{id:"additional-features"}),"\ucd94\uac00 \uae30\ub2a5"),(0,r.kt)("h4",k({},{id:"external-data-reader"}),"External Data Reader"),(0,r.kt)("p",null,"RGB565 \ud504\ub808\uc784 \ubc84\ud37c \ud53d\uc140 \ud615\uc2dd\uc5d0\uc11c TouchGFX\ub294 \uc18c\uc704 ",(0,r.kt)("em",{parentName:"p"},"Data Reader"),"\ub77c\ub294 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ub355\ubd84\uc5d0 \uac1c\ubc1c\uc790\ub294 \uba54\ubaa8\ub9ac\uc5d0\uc11c \ucd94\uac00 \ubc84\ud37c\ub85c \uc778\ud55c \ube44\uc6a9\uc774 \ubc1c\uc0dd\ud558\ub294 ",(0,r.kt)("a",k({parentName:"p"},{href:"../ui-development/touchgfx-engine-features/caching-bitmaps"}),"\uce90\uc2f1")," \ub300\uc2e0, \uba54\ubaa8\ub9ac \ub9e4\ud551\uc774 \ub418\uc9c0 \uc54a\uc740 \uc2dc\ub9ac\uc5bc \ud50c\ub798\uc2dc\uc5d0\uc11c \uc9c1\uc811 \ub370\uc774\ud130\ub97c \uc77d\uc5b4\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud50c\ub798\uc2dc \uce69\uc5d0\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc790\uc0b0\uc744 \uac80\uc0c9\ud558\uae30 \uc704\ud574 DataReader\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc608\ub294\xa0",(0,r.kt)("a",k({parentName:"p"},{href:"../scenarios/using-serial-flash"}),"\uc2dc\ub9ac\uc5bc \ud50c\ub798\uc2dc\xa0"),"\ubb38\uc11c\ub97c \ucc38\uc870\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Data Reader\xa0"),"\uc635\uc158\uc740 \ubcf4\ud1b5 \ucd94\uac00 \ubc84\ud37c\uc5d0 \ub300\ud55c \uba54\ubaa8\ub9ac\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc740 \uc800\uac00 \uc194\ub8e8\uc158(\uc608: STM32G0)\uc5d0\uc11c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. DMA2D\uac00 \ud65c\uc131\ud654\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0\uc5d0\ub294 \uc774 \ud50c\ub798\uc2dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"\ud504\ub808\uc784 \ubc84\ud37c \ud53d\uc140 \ud615\uc2dd\uc73c\ub85c ",(0,r.kt)("em",{parentName:"p"},"RGB565"),"\uac00 \uc120\ud0dd\ub418\uba74 ",(0,r.kt)("em",{parentName:"p"},"Additional Features\xa0"),"\uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub429\ub2c8\ub2e4."),(0,r.kt)(a.Z,{imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/additional-features-data-reader.png",width:"520",noShadow:!0,mdxType:"Figure"},"\ucd94\uac00 \uae30\ub2a5: DataReader"),(0,r.kt)("p",null,"\uac1c\ubc1c\uc790\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uad6c\uc131\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"External Data Reader"),": \uc774 \uae30\ub2a5\uc744 \ud65c\uc131\ud654 \ub610\ub294 \ube44\ud65c\uc131\ud654\ud569\ub2c8\ub2e4. \ud65c\uc131\ud654\ub97c \ud558\uba74 TouchGFX\uac00 \uc0dd\uc131\ub41c \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud1b5\ud574 \uc9c1\uc811 \uc790\uc0b0\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub97c \uac80\uc0c9\ud558\uac8c \ub429\ub2c8\ub2e4. \ube44\ud65c\uc131\ud654\ub97c \ud558\uba74 \uac1c\ubc1c\uc790\uac00 \ub300\uc2e0 \uba54\ubaa8\ub9ac\uc758 \ubc84\ud37c\uc5d0 \uc774\ubbf8\uc9c0\ub97c ",(0,r.kt)("em",{parentName:"li"},"\uce90\uc2f1"),"\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"External Data Reader: Line Buffer Size"),": \ud504\ub808\uc784 \ubc84\ud37c\uc5d0 \uc774\ubbf8\uc9c0 \ub610\ub294 \ud14d\uc2a4\ud2b8\ub97c \ud63c\ud569\ud560 \uc218 \uc788\ub3c4\ub85d 2\uac1c\uc758 \ubc84\ud37c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. ARGB8888 \ud53d\uc140 \ud615\uc2dd\uc5d0\uc11c \ud480 \uc0ac\uc774\uc988 \uc774\ubbf8\uc9c0\ub97c \uc9c0\uc6d0\ud558\ub3c4\ub85d \ud654\uba74 \ub108\ube44* 4\ubc14\uc774\ud2b8\uac00 \uae30\ubcf8 \uac12\uc785\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"External Data Reader: Minimum DMA transfer size"),": DMA \uc804\uc1a1\uc744 \uc2dc\uc791\ud558\uae30 \uc704\ud574 \ud544\uc694\ud55c \ucd5c\uc18c\ud55c\uc758 \ubc14\uc774\ud2b8\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \ub354 \ub9ce\uc740 \ubc14\uc774\ud2b8\uac00 \uc694\uccad\ub41c \uacbd\uc6b0\uc5d0\ub294 DMA\uac00 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"External Data Reader"),"\uac00 \ud65c\uc131\ud654\ub41c \uc0c1\ud0dc\uc5d0\uc11c \ucf54\ub4dc\ub97c \uc0dd\uc131\ud55c \ud6c4\uc5d0\ub294 \uba54\ubaa8\ub9ac \ub9e4\ud551\uc774 \ub418\uc9c0 \uc54a\uc740 \ud50c\ub798\uc2dc\uc5d0\uc11c \uc9c1\uc811 \uc790\uc0b0\uc744 \uac80\uc0c9\ud560 \uc218 \uc788\ub3c4\ub85d \ub2e4\uc74c\uacfc \uac19\uc740 \ud30c\uc77c\uc774 \ucd94\uac00\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFX/target/generated/TouchGFXGeneratedDataReader.cpp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFX/target/generated/TouchGFXGeneratedDataReader.hpp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFX/target/TouchGFXDataReader.cpp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFX/target/TouchGFXDataReader.hpp"))),(0,r.kt)("p",null,"\ud3c9\uc18c\ucc98\ub7fc TouchGFX Generator\uc5d0\uc11c \uc0dd\uc131\ub41c \ucf54\ub4dc\uc758 \uacbd\uc6b0 ",(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXGeneratedDataReade"),"r\ub294 \uc77d\uae30 \uc804\uc6a9\uc774\uace0 ",(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXDataReader\xa0"),"\ud074\ub798\uc2a4 \ub0b4\uc5d0\uc11c \uc218\uc815 \uc791\uc5c5\uc744 \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. ",(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXGeneratedDataReader"),"\uc758 \uc720\ud615\uc740 ",(0,r.kt)("inlineCode",{parentName:"p"},"touchgfx::FlashDataReader"),"\uc785\ub2c8\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DataReader"),"\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d TouchGFX HAL\ub97c \uad6c\uc131\ud558\uae30 \uc704\ud574 \ub2e4\uc74c\uacfc \uac19\uc740 \ud30c\uc77c\uc774 \uc218\uc815\ub429\ub2c8\ub2e4."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFX/target/generated/TouchGFXConfiguration.cpp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFX/target/generated/TouchGFXGeneratedHAL.cpp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFX/target/generated/TouchGFXGeneratedHAL.hpp"))),(0,r.kt)(o.Z,{mdxType:"Note"},"DataReader \ucd94\uac00 \uac00\ub2a5\uc740 DMA2D \ubc0f LTDC\uac00 \ube44\ud65c\uc131\ud654\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h4",k({},{id:"8bit-ltdc-color-look-up-table"}),"8bit LTDC Color Look-up Table"),(0,r.kt)("p",null,"L8 \ud615\uc2dd\uc73c\ub85c \ud504\ub808\uc784 \ubc84\ud37c\ub97c \uc77d\ub3c4\ub85d LTDC\uac00 \uad6c\uc131\ub418\uc5b4 \uc788\uace0 TouchGFX\uac00 ",(0,r.kt)("a",k({parentName:"p"},{href:"../../api/classes/classtouchgfx_1_1_l_c_d8bpp___a_b_g_r2222"}),"ABRG2222"),",\xa0 ",(0,r.kt)("a",k({parentName:"p"},{href:"../../api/classes/classtouchgfx_1_1_l_c_d8bpp___a_r_g_b2222"}),"ARGB222"),",\xa0 ",(0,r.kt)("a",k({parentName:"p"},{href:"../../api/classes/classtouchgfx_1_1_l_c_d8bpp___b_g_r_a2222"}),"BGRA2222")," \ub610\ub294\xa0 ",(0,r.kt)("a",k({parentName:"p"},{href:"../../api/classes/classtouchgfx_1_1_l_c_d8bpp___r_g_b_a2222"}),"RGBA2222"),"\uc5d0\uc11c \ub80c\ub354\ub9c1\ub418\uba74 TouchGFX Generator\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXHAL::initialize()"),". \ub3d9\uc548 LTDC\uc5d0 \ub85c\ub4dc\ub418\ub294 CLUT\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. LTDC \ubc0f CLUT \uc0ac\uc6a9\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 STM32 MCU \ucc38\uc870 \ub9e4\ub274\uc5bc\uc744 \ucc38\uc870\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4."),(0,r.kt)("h2",k({},{id:"video-decoding"}),"Video Decoding"),(0,r.kt)("p",null,"The Video Decoding section allows developers to enhance the TouchGFX HAL with either hardware or software video decoding capabilities."),(0,r.kt)("p",null,"Video Decoding is only available with RGB565 (16bpp) and RGB888 (24bpp) framebuffer pixel formats. If neither of these formats are selected the Vedeo Decoding section will not be available."),(0,r.kt)(o.Z,{mdxType:"Note"},"Not all MCUs support hardware video decoding."),(0,r.kt)("h3",k({},{id:"video-decoding-type"}),"Type"),(0,r.kt)("p",null,'By default the "Type" of video Decoding is disabled. If the required peripherals are not enabled in STM32CubeMX both "Software" and "Hardware" will be greyed out. Hover the mouse over the greyed out options the see which peripherals are required.'),(0,r.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/video-dependecies-info-box.png",width:"800",mdxType:"Figure"},'Info box showing Video Type dependencies for "Hardware"'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Software"),' - If LIBJPEG is enabled under the Middleware section in STM32CubeMX the "Software" option can be selected and the software decoder will be generated. This means that TouchGFX Generator will generate a software MJPEG decoder.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Hardware"),' - If JPEG is enabled under the Multimedia section and a CMSIS compliant RTOS is selected in the TouchGFX Generator the "Hardware" option can be selected.')),(0,r.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/video-decoding-options-4-18.png",width:"800",mdxType:"Figure"},"Video decoding type options"),(0,r.kt)("p",null,'In the LIBJPEG settings the RGB ordering in the "RGB scanline format"-section has to be set to "BGR" instead of "RGB" for efficiency. The number of bytes per pixel must be set to 3.'),(0,r.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/libjpeg-rgb-ordering.png",width:"700",mdxType:"Figure"},"Required LIBJPEG RGB scanline format settings"),(0,r.kt)("p",null,"When working with hardware decoding the RGB format in the JPEG settings has to be the same as the display."),(0,r.kt)(i.Z,{mdxType:"FurtherReading"},"See section ",(0,r.kt)(d.Z,{to:"scenarios/scenarios-video-decoding",mdxType:"Link"},"Scenarios")," for concrete examples of code for different video decoding scenarios."),(0,r.kt)("h3",k({},{id:"video-decoding-number"}),"Number of Videos"),(0,r.kt)("p",null,'The "Number of Videos" option is the largest amount of videos being decoded simultainously on the same screen in the GUI at any given time. If you only wish to decode one video on a screen the "Number of Videos" can be set to 1.'),(0,r.kt)("p",null,"A maximum of 4 videos can be decoded simultaneously."),(0,r.kt)("h3",k({},{id:"video-decoding-strategy"}),"Strategy"),(0,r.kt)("p",null,"The developer has three options when it comes to the video decoding strategy."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Direct to Framebuffer"),' - The video is decoded in the UI thread. It is slower than the other strategies. When working with hardware video decoding the "Direct to Framebuffer" option is unavailable.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Single Buffer")," - Video is decoded in a seperate task in a dedicated buffer. This buffer is allocated in internal memory."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Double Buffer")," - Video is decoded in a seperate task in two dedicated buffers for better performances at the cost of memory.")),(0,r.kt)("p",null,"When working with the single or double framebuffer strategy it is necessary to enable a CMSIS compliant OS."),(0,r.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/video-rtos-requirement-info-box.png",width:"700",mdxType:"Figure"},"Info box about CMSIS RTOS requirement"),(0,r.kt)(o.Z,{mdxType:"Note"},"Pay attention to the memory consumption when working with the double buffer strategy."),(0,r.kt)(i.Z,{mdxType:"FurtherReading"},"See section ",(0,r.kt)(d.Z,{to:"scenarios/scenarios-video-decoding",mdxType:"Link"},"Scenarios")," for a concrete example of configuring FreeRTOS for video decoding."),(0,r.kt)("h3",k({},{id:"video-decoding-buffer-size"}),"Buffer size"),(0,r.kt)("p",null,"The buffer width and height settings must correspond to the largest video dimension in the application. The width must be divisible by 32."),(0,r.kt)("p",null,'The following code is the generated code in TouchGFXGeneratedHAL.cpp for an application using an RGB888 display with a 480*272 video and the "Single Buffer" video decoding strategy.'),(0,r.kt)(l.Z,{mdxType:"CodeHeader"},"TouchGFXGeneratedHAL.cpp"),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"\n#include <DedicatedBufferVideoController.hpp>\n#include <SoftwareMJPEGDecoder.hpp>\n\nuint32_t lineBuffer[480];\n\nSoftwareMJPEGDecoder mjpegdecoder1((uint8_t*)lineBuffer);\n\nuint32_t videoRGBBuffer[97920];\nDedicatedBufferController<1, 480, 272, 480*3U, Bitmap::RGB888> videoController;\n\n//Singleton Factory\nVideoController& VideoController::getInstance()\n{\n    return videoController;\n}\n\nvoid TouchGFXGeneratedHAL::initialize()\n{\n    HAL::initialize();\n    registerEventListener(*(Application::getInstance()));\n    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);\n\n    /*\n     * Add software decoder to video controller\n     */\n    videoController.addDecoder(mjpegdecoder1, 0);\n\n    videoController.setRGBBuffer((uint8_t*)videoRGBBuffer, sizeof(videoRGBBuffer));\n}\n")),(0,r.kt)("h2",k({},{id:"generated-project"}),"\uc0dd\uc131\ub41c \ud504\ub85c\uc81d\ud2b8"),(0,r.kt)("p",null,"TouchGFX works with (at least) the following IDEs when generating code using the ",(0,r.kt)("strong",{parentName:"p"},"Generate Code")," button in STM32CubeMX:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"EWARM"),(0,r.kt)("li",{parentName:"ol"},"MDK-ARM"),(0,r.kt)("li",{parentName:"ol"},"STM32CubeIDE")),(0,r.kt)("p",null,"\ucd5c\uc801\uc758 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870\ub97c \uc704\ud574 \ub2e4\uc74c\uacfc \uac19\uc740 \ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131 \uc635\uc158\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uad6c\uc870:\xa0",(0,r.kt)("strong",{parentName:"li"},"Advanced")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Generate under root\xa0"),"\ube44\ud65c\uc131\ud654(STM32CubeIDE \uc804\uc6a9)")),(0,r.kt)(a.Z,{imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/project-manager.png",noShadow:!1,mdxType:"Figure"},"Advanced \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uad6c\uc870\ub97c \uc120\ud0dd\ud558\uace0 \ub8e8\ud2b8 \uc544\ub798 Generate\uc758 \uc120\ud0dd\uc744 \ud574\uc81c"),(0,r.kt)("p",null,"STM32CubeMX will also generate a ",(0,r.kt)("em",{parentName:"p"},"TouchGFX")," folder with the following structure:"),(0,r.kt)(a.Z,{imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/folder-b.png",noShadow:!1,mdxType:"Figure"},"TouchGFX \ud3f4\ub354 \uad6c\uc870"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"App\xa0"),"\ud3f4\ub354\uc5d0\ub294 TouchGFX\ub97c \uac1c\uc2dc \ubc0f \uc2dc\uc791\ud558\uae30 \uc704\ud55c \ucf54\ub4dc\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"target\xa0"),"\ud3f4\ub354\uc5d0\ub294 \uc77d\uae30 \uc804\uc6a9\uc73c\ub85c \uc0dd\uc131\ub41c \ucf54\ub4dc(generated/ \ub0b4\ubd80\uc758)\uc640 \uc218\uc815 \uac00\ub2a5\ud55c \uc0ac\uc6a9\uc790 \ud074\ub798\uc2a4(",(0,r.kt)("inlineCode",{parentName:"li"},"STM32TouchController.cpp"),",\xa0",(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFXGPIO.cpp\xa0"),"\ubc0f",(0,r.kt)("inlineCode",{parentName:"li"},"\xa0TouchGFXHAL.cpp"),")\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"TouchGFX \ud5e4\ub354 \ud30c\uc77c \ubc0f \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc644\uc804\ud788 \uac16\ucd98 \uc804\uccb4 TouchGFX \ud504\ub85c\uc81d\ud2b8\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub3c4\ub85d TouchGFX Designer\ub97c \uc0ac\uc6a9\ud574",(0,r.kt)("em",{parentName:"li"},".part"),"\xa0\ud30c\uc77c\uc744 \uc5f4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc5d0\ub294 \ud53d\uc140 \ud615\uc2dd\uacfc TouchGFX \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucf54\ub4dc\ub97c \uc0dd\uc131\ud560 \ub54c \uc124\uacc4\uc790\uac00 \uc0ac\uc6a9\ud558\ub294 \uce94\ubc84\uc2a4 \ud06c\uae30 \uac19\uc774 \uad00\ub828\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc815\ubcf4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("h2",k({},{id:"touchgfx-designer-\ud504\ub85c\uc81d\ud2b8"}),"TouchGFX Designer \ud504\ub85c\uc81d\ud2b8"),(0,r.kt)("p",null,"\uc544\ub798 \ucf54\ub4dc\ub294 \uc0dd\uc131 \ucf54\ub4dc \uc544\ud0a4\ud14d\ucc98\xa0\uc139\uc158\uc5d0\uc11c \uc5b8\uae09\ub41c",(0,r.kt)("inlineCode",{parentName:"p"},".part "),"\ud30c\uc77c\uc758 \ub0b4\uc6a9\uc5d0 \ub300\ud55c \uc608\uc81c\uc785\ub2c8\ub2e4. The post-generate command, seen below, will update the project selected in STM32CubeMX (e.g. EWARM) when new files are created by the TouchGFX designer (e.g. new screens and assets)."),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{className:"language-json"}),'{\n "Application": {\n "Name": "my_project",\n "TouchGfxPath": "../Middlewares/ST/touchgfx",\n "AvailableColorDepths": [ 16 ],\n "AvailableLCDs":\n  {\n    "16": "LCD16bpp"\n },\n "AvailableResolutions" :\n [\n  {\n    "Width": 320,\n    "Height": 240\n  }\n ],\n "PostGenerateTargetCommand" : "touchgfx update_project --project-file=../my_project.ioc --platform=m7"\n },\n "Version": "4.13.0"\n}\n')),(0,r.kt)("p",null,"TouchGFX Designer\uc5d0\uc11c",(0,r.kt)("em",{parentName:"p"},".part")," \ud30c\uc77c\uc744 \uc5f4 \ub54c \uac1c\ubc1c\uc790\uc5d0\uac8c\ub294 \uad6c\uccb4\uc801\uc778 UI\ub97c \ub85c\ub4dc\ud558\uac70\ub098 \ube48 \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc2dc\uc791\ud560 \uc218 \uc788\ub294 \uc635\uc158\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4."),(0,r.kt)(a.Z,{imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/choose-ui-4-17.png",noShadow:!1,mdxType:"Figure"},"UI \uc120\ud0dd"),(0,r.kt)("p",null,"TouchGFX Designer\uc5d0\uc11c ",(0,r.kt)("em",{parentName:"p"},"Generate Code"),"\ub97c \ub204\ub974\uace0 \ub09c \uc774\ud6c4\uc758 TouchGFX \ud3f4\ub354\uc758 \uad6c\uc870\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uadf8\ub9bc\uc5d0\ub294 TouchGFX \ud3f4\ub354 \uad6c\uc870\uc758 \uad6c\uccb4\uc801\uc778 \uc608\uac00 \ub098\uc640 \uc788\ub294\ub370, \uc0dd\uc131 \uc774\ud6c4 \uc0c8\ub85c \uc0dd\uae34 \ud30c\uc77c\uacfc \ud3f4\ub354\uac00 \uac15\uc870 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)(a.Z,{imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/designer-gen-code-4-17.png",noShadow:!1,mdxType:"Figure"},"\ucf54\ub4dc \uc0dd\uc131"),(0,r.kt)(a.Z,{imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/post-designer-generation.png",noShadow:!1,mdxType:"Figure"},"TouchGFX \ud3f4\ub354 \uad6c\uc870"),(0,r.kt)("p",null,"TouchGFX will detect the selected IDE from the .ioc STM32CubeMX file (For STM32CubeIDE, EWARM, MDK-ARM) and update the project file with new, generated files like files for screen definitions, image- and font assets."),(0,r.kt)("p",null,"At this point, developers can work interchangeably in STM32CubeMX, TouchGFX Designer and toolchain/IDE where:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"STM32CubeMX updates the IDE project with drivers"),(0,r.kt)("li",{parentName:"ul"},"STM32CubeMX updates the TouchGFX ",(0,r.kt)("em",{parentName:"li"},".part")," file with UI related changes that are instantly picked up by the designer"),(0,r.kt)("li",{parentName:"ul"},"STM32CubeMX generates HAL code (TouchGFX/target/generated/) based on TouchGFX Generator Configuration necessary for TouchGFX to work on a specific platform."),(0,r.kt)("li",{parentName:"ul"},"TouchGFX Designer\ub294 \uc0dd\uc131\ub41c \ucf54\ub4dc\ub85c \ud504\ub85c\uc81d\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.")),(0,r.kt)(o.Z,{mdxType:"Note"},'For Dual-Core projects, having enabled TouchGFX for a specific context, the TouchGFX project will usually be located in a dedicated folder for that context, e.g. "CM4/TouchGFX" or "CM7/TouchGFX".'),(0,r.kt)("h2",k({},{id:"\uc0dd\uc131\ub41c-\ub3d9\uc791-\uc218\uc815"}),"\uc0dd\uc131\ub41c \ub3d9\uc791 \uc218\uc815"),(0,r.kt)("p",null,"It important to know that, due to the class hierarchy of the HAL, users can override HAL configuration or behavior that was generated by STM32CubeMX. \uc544\ub798 \uc608\uc81c\uc5d0\uc11c \uac1c\ubc1c\uc790\ub294 \ucd94\uac00\ub85c TouchGFX\ub97c \uad6c\uc131\ud558\uac70\ub098",(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXGeneratedHAL"),"\uc5d0 \uc124\uc815\ub41c \uae30\uc874 \uad6c\uc131\uc744 \uc218\uc815\ud558\ub3c4\ub85d ",(0,r.kt)("inlineCode",{parentName:"p"},"initialize "),"\ud568\uc218\ub97c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeHeader"},"TouchGFXHAL.cpp"),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"void TouchGFXHAL::initialize()\n{\n    // Calling parent implementation of initialize().\n    //\n    // To overwrite the generated implementation, omit call to parent function\n    // and implemented needed functionality here.\n    // Please note, HAL::initialize() must be called to initialize the framework.\n\n    TouchGFXGeneratedHAL::initialize();\n\n    //Overriding configurations\n    hal.lockDMAToFrontPorch(true);\n    hal.setFingerSize(4);\n    hal....\n}\n")),(0,r.kt)("h2",k({},{id:"upgrading-projects"}),"\ud504\ub85c\uc81d\ud2b8 \uc5c5\uadf8\ub808\uc774\ub4dc"),(0,r.kt)("p",null,"TouchGFX Generator parameters are stored in .ioc files (STM32CubeMX project). \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc758 TouchGFX Generator\uac00 \ucd9c\uc2dc\ub418\uba74 \uc774\uc804 \ubc84\uc804\uc758 \ud30c\ub77c\ubbf8\ud130\uac00 \uc0c8 \ubc84\uc804\uacfc \ud638\ud658\uc774 \ub418\uc9c0 \uc54a\uc544\uc11c \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc774 \ud544\uc694\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"Since STM32CubeMX does not support upgrading between X-CUBE versions the upgrade is automatically performed by TouchGFX Designer when ",(0,r.kt)("em",{parentName:"p"},"Generate Code")," is pressed due to the following command in the ",(0,r.kt)("inlineCode",{parentName:"p"},"PostGenerateTargetCommand")," section of the ",(0,r.kt)("inlineCode",{parentName:"p"},".touchgfx")," file."),(0,r.kt)(l.Z,{mdxType:"CodeHeader"},".touchgfx"),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{}),'"PostGenerateTargetCommand" : "touchgfx update_project --project-file=../upgrade.ioc --platform=m7"\n')),(0,r.kt)("p",null,"\uc774 \uba85\ub839\uc740",(0,r.kt)("inlineCode",{parentName:"p"},"\xa0.ioc\xa0"),"\ud30c\uc77c\uc744 \uc77d\uace0 X-CUBE-TOUCHGFX\uc758 \ud604\uc7ac \ubc84\uc804\uc5d0 \ub9de\uac8c \ud30c\ub77c\ubbf8\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \uc544\ub798\uc5d0\ub294 X-CUBE-TOUCHGFX 4.13.0\uc5d0\uc11c \uc0dd\uc131\ub41c .ioc \ud30c\uc77c\uc5d0\uc11c \uc9c1\uc811 \uc2a4\ud06c\ub9bd\ud2b8(X-CUBE-TOUCHGFX 4.14.0)\ub97c \uc2e4\ud589\ud558\ub294 \uc608\uc785\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746 DISCO \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\ud558\uc5ec 4.13.0\uc744 4.14.0\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \uc791\uc5c5 \uc608\uc81c"),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{}),"$ touchgfx update_project --project-file=../STM32F746G_DISCO.ioc\n  TouchGFX Generator 4.13.0 found\n  Creating backup of ../STM32F746G_DISCO.ioc as ../backup_STM32F746G_DISCO.ioc\n  Performing upgrade 4.13.0 -> 4.14.0 ... OK\n")),(0,r.kt)("p",null,"Opening the updated project with STM32CubeMX prompts the user to install the version of X-CUBE-TOUCHGFX that is represented by the .ioc file (if not already installed). ",(0,r.kt)("em",{parentName:"p"},"Download now"),"\ub97c \ud074\ub9ad\ud558\uba74 X-Cube-TouchGFX-4.14.0\uc774 \ub2e4\uc6b4\ub85c\ub4dc \ubc0f \uc124\uce58\ub429\ub2c8\ub2e4."),(0,r.kt)(a.Z,{imageSource:"/img/development/touchgfx-hal-development/touchgfx-generator/cubemx-additional-software-manager-settings-missing-x-cube-touchgfx-4.14.0.png",noShadow:!1,mdxType:"Figure"},"\ucd94\uac00 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uad6c\uc131 \uc694\uc18c \ub204\ub77d: TouchGFX Generator 4.14.0"),(0,r.kt)("p",null,"\uc5c5\uadf8\ub808\uc774\ub4dc \uc808\ucc28\uac00 \uc9c4\ud589\ub418\ub294 \ub3d9\uc548 TouchGFX Generator\uc758 \ubaa8\ub4e0 \uad6c\uc131\uc774 \uc720\uc9c0\ub418\uace0, .ioc \ud30c\uc77c\uc758 \ubc31\uc5c5\uc774 \uc55e\uc5d0",(0,r.kt)("inlineCode",{parentName:"p"},"\xa0backup_"),"\uc774 \ubd99\uc5b4 \uc788\ub294 \uc6d0\ubcf8\uacfc \ub098\ub780\ud788 \ubc30\uce58\ub429\ub2c8\ub2e4."),(0,r.kt)(o.Z,{mdxType:"Note"},"To use the new features provided by TouchGFX Generator, ",(0,r.kt)("i",null,"Generate Code")," must be performed in STM32CubeMX."),(0,r.kt)(c.Z,{mdxType:"Caution"},"If upgrading X-CUBE-TOUCHGFX through STM32CubeMX for an existing TouchGFX Project and the upgrade process is not run by TouchGFX Designer, TouchGFX Generator parameters will be reset to default since they are applicable to a different version."))}N.isMDXComponent=!0}}]);